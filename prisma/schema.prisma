// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")       // direct connection for Prisma CLI
}

model Course {
  // id Int @id @unique @default(autoincrement())
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId  String
  title String
  description String? @db.Text
  imageUrl String? @db.Text
  price Float?
  isPublished Boolean? @default(false)
  categoryId String? @db.Uuid
  attachments Attachment[]
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  category Category? @relation(fields: [categoryId],references: [id])

@@index([categoryId])
}

model Category {
  // id  Int @id  @unique @default(autoincrement())
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
name String
course Course[]
}

model Attachment {
  // id Int @id  @unique  @default(autoincrement())
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  courseId String @db.Uuid
  name String
  url String? @db.Text
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  course Course? @relation(fields: [courseId], references: [id],onDelete: Cascade)
  // onDelete: Cascade will delete the attachment if the course is deleted
  @@index([courseId])
}